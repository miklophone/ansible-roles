---
- hosts: all
  user: admin
  sudo: yes
  
  tasks:
  #
  # This playbook will set up a new server to the proper configuration
  #
  - name: copy template of hosts
    action: template src=../templates/hosts.j2 dest=/etc/hosts
    only_if: is_set('$hostname')

  - name: copy template of hostname
    action: template src=../templates/hostname.j2 dest=/etc/hostname
    only_if: is_set('$hostname')
    notify: reset-hostname
    
  #
  # Adjust the SSH configuration to make it secure
  #    
  - name: copy SSH configuration
    action: template src=../templates/sshd_config.j2 dest=/etc/ssh/sshd_config  owner=root group=root mode=0644   
    only_if: is_set('$hostname')
    notify: restart-ssh

  #
  # Setup firewall
  #    
  - name: copy filewall startup script
    only_if: is_set('$hostname')
    action: template src=../templates/firewall-script.j2 dest=/etc/network/if-pre-up.d/firewall owner=root group=root mode=0755

  - name: copy firewall rules
    action: template src=../templates/firewall-rules.j2 dest=/etc/iptables.firewall.rules owner=root group=root mode=0644
    only_if: is_set('$hostname')
    notify: restart-firewall

  #
  # Make sure apt is up to date
  #
  # NB: This uses a feature that I thought was in the ansible devel branch, but I cannot find it right now.
  
  #- name: update apt system
  #  action: apt upgrade=yes update_cache=yes
    
  handlers:

  - name: reset-hostname
    action: command /bin/hostname -F /etc/hostname

  - name: restart-ssh
    action: service name=ssh state=restarted

  - name: restart-firewall
    action: shell /sbin/iptables-restore < /etc/iptables.firewall.rules

 