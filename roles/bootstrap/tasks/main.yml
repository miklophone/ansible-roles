---
# This role contains plays that perform the lowest level machine setup

# Setup the core packages that we need

 - name: Update APT to latest packages
   apt:  update_cache=yes

 - name: Update all existing APT packages on the system
   apt:  upgrade=yes

 - name: Install Emacs editor
   apt:  pkg=emacs

 - name: Install OpenJDK 7 JRE headless
   apt:  pkg=openjdk-7-jre-headless

# Setup the hostname correctly (important for NetKernel licensing)

 - name: Add correct hostname to /etc/hosts
   lineinfile: 
     dest=/etc/hosts 
     line="{{ ansible_default_ipv4.address }}  {{ ansible_hostname }}.netkernelroc.org"
     insertafter='^127\.0\.0\.1.*'
     state=present

# Set locale and timezone - see /defaults (Works on Ubuntu/Debian)

 - name: Set locale to {{ locale }}
   command: /usr/sbin/update-locale LANG={{ locale }} LC_ALL={{ locale }}
   when: ansible_os_family == "Debian"

 - name: Set /etc/localtime to {{ timezone }}
   command: /bin/cp /usr/share/zoneinfo/{{ timezone }} /etc/localtime
   when: ansible_os_family == "Debian"
 
# Setup firewall (restart is deferred as we are changing the SSH port number)
#   NB: rules are stored in /etc/iptables.firewall.rules and set with a new service

 - name: Copy basic firewall rules to computer
   template: 
     backup: yes
     dest: /etc/iptables.firewall.rules
     src:  firewall-rules.j2


# Setup firewall restart service

 - name: Setup firewall service
   template:
     backup: yes     
     dest: /etc/network/if-pre-up.d/firewall
     src:  firewall-script.j2
     mode: 0755


# Setup user accounts

# - name: Remove user accounts
#   user:  name={{ item.name }} state=absent remove=yes
#   with_items: users

 - name: Setup user accounts
   user:  name={{ item.name }} state=present generate_ssh_key=no shell={{ item.shell }} uid={{ item.uid }} password={{ item.password }}
   with_items: users

 - name: Sudo users
   command: sudo usermod -a -G sudo {{ item.name }}
   with_items: users

 - name: Create .ssh directories
   file: path="/home/{{ item.name }}/.ssh" state=directory mode=700 group={{ item.name}} owner={{ item.name }}
   with_items: users

 - name: Setup user RSA public keys
   copy: src="files/users/{{ item.name }}_rsa.pub" dest="/home/{{ item.name }}/.ssh/authorized_keys"
   with_items: users

 - name: Set security and ownership on authorized_keys
   file: path="/home/{{ item.name }}/.ssh/authorized_keys" mode=600 group={{ item.name}} owner={{ item.name }}
   with_items: users


# Setup SSH configuration

 - name: Setup SSH service configuration
   template:
     backup: yes
     dest: /etc/ssh/sshd_config
     src: sshd-config.j2
     mode: 0644

 - name: Copy new issue
   template:
     backup: yes
     dest: /etc/issue.net
     src: issue.j2

 - name: Get rid of /etc/motd message
   file: 
    path=/etc/motd
    state=absent

 - name: Create empty /etc/motd
   file:
     path=/etc/motd
     state=touch



# Reboot computer 
 - name: Reboot
   command: shutdown -r now

